# -*- coding: utf-8 -*-
"""HW1 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HSTA-gfp2rexNej7Oog4Q8KUn8z5R7ew
"""

def WhoAmI():
  return('lc3947')

def getBondPrice(y, face, couponRate, m, ppy):
  coupon = (face*couponRate)/ppy
  sumDcf = 0
  numCoupon= m*ppy
  for i in range(numCoupon):
    dcf = 1/(1+(y/ppy))**(i+1)
    sumDcf += coupon *dcf

  PriceBond = sumDcf+ (face/(1+(y/ppy))**numCoupon)
  return(PriceBond)

print(getBondPrice(.03, 2000000, .04, 10,  1))

def getBondDuration(y, face, couponRate, m, ppy):
  C= (couponRate*face)/ppy
  PV_Total = 0
  PV_Timeweighted = 0

  for i in range(m*ppy):
    Time = (i+1)/ppy
    DiscountFactor = (1+y/ppy)**-(i+1)
    PV_Total += C*DiscountFactor
    PV_Timeweighted += Time*C*DiscountFactor

  DiscountFactor = (1 + y / ppy) **  -(m * ppy)
  PV_Total += face * DiscountFactor
  PV_Timeweighted += (m * face * DiscountFactor)
  BondDuration = PV_Timeweighted/PV_Total
  return BondDuration

print(getBondDuration(.03, 2000000, .04, 10,  1))

def getBondPrice_E(face,couponRate, m, yc):
  bondPrice = 0
  coupon = face*couponRate

  for i, rate in enumerate(zip(times, yc))
    pv = 1/((1+rate)**t)

    if i != m:
      bondPrice += pv*coupon
    else:
      bondPrice += (face+ coupon)*pv
  return bondPrice

yc = [0.010, 0.015, 0.020, 0.025, 0.030]
print(getBondPrice_E(2000000, 0.04,len(yc), yc))

from os import times
def getBondPrice_Z(face,couponRate, times, yc):
  bondPrice = 0
  coupon = face*couponRate
  for i, (t,rate) in enumerate(zip(times, yc)):
    pv = 1/((1+rate)**t)

    if i != len(times)-1:
      bondPrice += pv*coupon
    else:
      bondPrice += (face+ coupon)*pv
  return bondPrice

yc = [0.010, 0.015, 0.020, 0.025, 0.030]
times = [1,1.5,3,4,7]
print(getBondPrice_Z(2000000, 0.04,times, yc))

def FizzBuzz(start, finish):
  for i in range (start, finish+1):
    if i%3 == 0 and i%5 == 0:
      print('FizzBuzz')
    elif i%3 == 0:
      print('Fizz')
    elif i%5 == 0:
      print('Buzz')
    else:
      print(i)
print(FizzBuzz(1,16))

def MyMatMult1(v1, v2):
  lenV = len(v1)
  if(lenV != len(v2)): return("ERROR length mismatch")

  dot = 0
  for i in range(lenV):
    dot += v1[i]*v2[i]
  return dot

v1 = [1,2,3]
v2 = [1,4,7]
print(MyMatMult1(v1,v2))

def MyMatMult2(Vec, matrix):
  lenV = len(Vec)
  if(lenV != len(matrix)): return("ERROR length mismatch")

  result = [0] * len(matrix)
  for i in range(len(matrix)):
    for j in range(len(matrix)):
      result[i] += Vec[j]*matrix[j][i]
  return result

Vec = [1,2,3]
matrix = [[1,2,3],[4,5,6],[7,8,9]]
print(MyMatMult2(Vec,matrix))

